@model CheckoutAttributeModel

@inject IEventPublisher eventPublisher

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12 clearfix">
                <div class="pull-left">
                    @await Component.InvokeAsync("SettingMode", new { modeName = "checkoutattribute-advanced-mode" })
                </div>
            </div>
        </div>
        
        <app-tabs id="checkoutattribute-edit">
            <app-tab asp-name="tab-info" asp-title="@T("Admin.Catalog.Attributes.CheckoutAttributes.Info")" asp-default="true">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</app-tab>
            <app-tab asp-name="tab-values" asp-title="@T("Admin.Catalog.Attributes.CheckoutAttributes.Values")">@await Html.PartialAsync("_CreateOrUpdate.Values", Model)</app-tab>
            @if (Model.ConditionAllowed)
            {
                <app-tab asp-name="tab-condition" asp-title="@T("Admin.Catalog.Attributes.CheckoutAttributes.Condition")">@await Html.PartialAsync("_CreateOrUpdate.Condition", Model)</app-tab>
            }
        </app-tabs>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "checkoutattribute-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}