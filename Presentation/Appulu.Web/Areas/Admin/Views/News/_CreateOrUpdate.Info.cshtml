@model NewsItemModel

<div class="panel-group">
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.NewsDetailsInfoTop, additionalData = Model })
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="form-group" @(Model.AvailableLanguages.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                <div class="col-md-3">
                    <app-label asp-for="LanguageId" />
                </div>
                <div class="col-md-9">
                    <app-select asp-for="LanguageId" asp-items="Model.AvailableLanguages" />
                    <span asp-validation-for="LanguageId"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="Title" />
                </div>
                <div class="col-md-9">
                    <app-editor asp-for="Title" asp-required="true" />
                    <span asp-validation-for="Title"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="Short" />
                </div>
                <div class="col-md-9">
                    <app-textarea asp-for="Short" asp-required="true" />
                    <span asp-validation-for="Short"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="Full" />
                </div>
                <div class="col-md-9">
                    <div class="input-group input-group-required">
                        <app-editor asp-for="Full" asp-template="RichEditor" />
                        <div class="input-group-btn">
                            <app-required />
                        </div>
                    </div>
                    <span asp-validation-for="Full"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="AllowComments" />
                </div>
                <div class="col-md-9">
                    <app-editor asp-for="AllowComments" />
                    <span asp-validation-for="AllowComments"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="StartDate" />
                </div>
                <div class="col-md-9">
                    <app-editor asp-for="StartDate" />
                    <span asp-validation-for="StartDate"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="EndDate" />
                </div>
                <div class="col-md-9">
                    <app-editor asp-for="EndDate" />
                    <span asp-validation-for="EndDate"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="SelectedStoreIds" />
                </div>
                <div class="col-md-9">
                    <div class="row">
                        <div class="col-md-4">
                            <app-select asp-for="SelectedStoreIds" asp-items="Model.AvailableStores" asp-multiple="true" />
                            <script>
                                $(document).ready(function() {
                                    var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)').data("kendoMultiSelect");
                                    storesIdsInput.setOptions({
                                        autoClose: false,
                                        filter: "contains"
                                    });

                                    @if (Model.AvailableStores.Count == 0)
                                    {
                                        <text>
                                            storesIdsInput.setOptions({
                                                enable: false,
                                                placeholder: 'No stores available'
                                            });
                                            storesIdsInput._placeholder();
                                            storesIdsInput._enable();
                                        </text>
                                    }
                                });
                            </script>
                        </div>
                        <div class="col-md-8">
                            @await Component.InvokeAsync("MultistoreDisabledWarning")
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <app-label asp-for="Published" />
                </div>
                <div class="col-md-9">
                    <app-editor asp-for="Published" />
                    <span asp-validation-for="Published"></span>
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.NewsDetailsInfoBottom, additionalData = Model })
</div>